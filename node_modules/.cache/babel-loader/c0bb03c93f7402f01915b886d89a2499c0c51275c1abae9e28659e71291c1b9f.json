{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Parents-Teachers Commuication app\\\\parent_teacher_communication\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]); // State to store messages  \n  const [content, setContent] = useState(''); // State to store input message  \n  const [feedback, setFeedback] = useState(''); // State to store feedback messages  \n  const apiUrl = 'http://127.0.0.1:8000/api/messages/'; // Your API endpoint  \n\n  // Fetch messages from the API  \n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token your_token_here',\n          // Replace with the actual token  \n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data); // Update state with fetched messages  \n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      setFeedback('Error fetching messages.');\n    }\n  };\n\n  // Handle form submission to send a new message  \n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission  \n    if (!content) return; // Prevent sending empty messages  \n\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Token your_token_here',\n          // Replace with the actual token  \n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content\n        }) // Prepare the message body  \n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      setFeedback('Message sent!'); // Success feedback  \n      setContent(''); // Clear the input  \n      fetchMessages(); // Refresh the message list  \n    } catch (error) {\n      console.error('Error sending message:', error);\n      setFeedback('Error sending message.');\n    }\n  };\n\n  // Use useEffect to fetch messages when component mounts  \n  useEffect(() => {\n    fetchMessages(); // Fetch messages on initial render  \n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parent-Teacher Communication App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message.content\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) // Adjust according to your message format  \n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Send a Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"content\",\n          name: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value) // Update content state on input  \n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V7hyFEUMT16xdbORdYn3b369gbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","messages","setMessages","content","setContent","feedback","setFeedback","apiUrl","fetchMessages","response","fetch","method","headers","ok","Error","data","json","error","console","handleSubmit","e","preventDefault","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","id","onSubmit","htmlFor","type","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Parents-Teachers Commuication app/parent_teacher_communication/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';  \r\n\r\nfunction App() {  \r\n  const [messages, setMessages] = useState([]); // State to store messages  \r\n  const [content, setContent] = useState(''); // State to store input message  \r\n  const [feedback, setFeedback] = useState(''); // State to store feedback messages  \r\n  const apiUrl = 'http://127.0.0.1:8000/api/messages/'; // Your API endpoint  \r\n\r\n  // Fetch messages from the API  \r\n  const fetchMessages = async () => {  \r\n    try {  \r\n      const response = await fetch(apiUrl, {  \r\n        method: 'GET',  \r\n        headers: {  \r\n          'Authorization': 'Token your_token_here', // Replace with the actual token  \r\n          'Content-Type': 'application/json',  \r\n        },  \r\n      });  \r\n      if (!response.ok) {  \r\n        throw new Error('Failed to fetch messages');  \r\n      }  \r\n      const data = await response.json();  \r\n      setMessages(data); // Update state with fetched messages  \r\n    } catch (error) {  \r\n      console.error('Error fetching messages:', error);  \r\n      setFeedback('Error fetching messages.');  \r\n    }  \r\n  };  \r\n\r\n  // Handle form submission to send a new message  \r\n  const handleSubmit = async (e) => {  \r\n    e.preventDefault(); // Prevent default form submission  \r\n    if (!content) return; // Prevent sending empty messages  \r\n\r\n    try {  \r\n      const response = await fetch(apiUrl, {  \r\n        method: 'POST',  \r\n        headers: {  \r\n          'Authorization': 'Token your_token_here', // Replace with the actual token  \r\n          'Content-Type': 'application/json',  \r\n        },  \r\n        body: JSON.stringify({ content }), // Prepare the message body  \r\n      });  \r\n\r\n      if (!response.ok) {  \r\n        throw new Error('Failed to send message');  \r\n      }  \r\n\r\n      setFeedback('Message sent!'); // Success feedback  \r\n      setContent(''); // Clear the input  \r\n      fetchMessages(); // Refresh the message list  \r\n    } catch (error) {  \r\n      console.error('Error sending message:', error);  \r\n      setFeedback('Error sending message.');  \r\n    }  \r\n  };  \r\n\r\n  // Use useEffect to fetch messages when component mounts  \r\n  useEffect(() => {  \r\n    fetchMessages(); // Fetch messages on initial render  \r\n  }, []);  \r\n\r\n  return (  \r\n    <div>  \r\n      <h1>Parent-Teacher Communication App</h1>  \r\n      {feedback && <p>{feedback}</p>} {/* Display feedback messages */}  \r\n\r\n      <div>  \r\n        <h2>Messages</h2>  \r\n        <ul>  \r\n          {messages.map((message) => (  \r\n            <li key={message.id}>{message.content}</li> // Adjust according to your message format  \r\n          ))}  \r\n        </ul>  \r\n      </div>  \r\n\r\n      <div>  \r\n        <h2>Send a Message</h2>  \r\n        <form onSubmit={handleSubmit}>  \r\n          <label htmlFor=\"content\">Message:</label>  \r\n          <input  \r\n            type=\"text\"  \r\n            id=\"content\"  \r\n            name=\"content\"  \r\n            value={content}  \r\n            onChange={(e) => setContent(e.target.value)} // Update content state on input  \r\n            required  \r\n          />  \r\n          <button type=\"submit\">Send</button>  \r\n        </form>  \r\n      </div>  \r\n    </div>  \r\n  );  \r\n}  \r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}